(n > 0) && ((n & (n-1)) == 0) -- 代码的作用是判断一个数是否为2的整数次幂
n &= (n -1) ; // 清除最低位的1
10 * 10^8(B) = 1G
十亿字节为1G。用哈希表实现的具体办法是将每一个 email 地址对应成一个八字节的信息指纹，
然后将这些信息指纹存入哈希表，由于哈希表的存储效率一般只有 50%，因此一个 email 地址需要占用十六个字节。一亿个地址大约要 1.6GB， 即十六亿字节的内存）

max{|x1-x2|,|y1-y2|} =（|x1+y1-x2-y2|+|x1-y1-(x2-y2)|）/2 --公式（1）


判断奇偶：x & 1 //(0 偶数, 1 奇数)
除以2的n次幂（乘法左移）：x >> n
对2的n次幂取余：x & ~(~0<<n)
从低位开始，将x的第n位置1：x | (1<<n)
从低位开始，将x的第n位置0：x & ~(1<<n)
测试x的第n位是否为1：x & (1<<n)
最大的int (01 11111111 11111111 11111111)： MAX_INT = ~(1<<31)
最小的int (10 00000000 000000000 00000000)：MIN_INT = 1<<31